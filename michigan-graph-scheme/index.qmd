---
title: "Michigan Graph Scheme for Stata"
authors: "Andy Grogan-Kaylor"
date: "today"
format:
  html:
    toc: true
    number-sections: true
    theme:
      light: yeti
      dark: vapor
    lightbox: true
filters:
  - highlight-text
---

# Introduction

```{r}
#| output: false
#| echo: false

library(Statamarkdown)

```


```{stata, collectcode=TRUE}
#| output: false
#| echo: false

clear all

quietly set obs 9

generate x = _n
	
quietly save "graphdemo.dta", replace

graph bar (count), ///
over(x, axis(off)) asyvars ///
ytitle(" ") ylabel(none) ///
yscale(lcolor(none)) ///
title(Michigan Graph Scheme Colors) ///
scheme(michigan) ///
ysize(3) scale(1) ///
name(michigan, replace)
	
quietly graph export MichiganColorsStata.png, name("michigan") width(2000) replace

quietly graph export MichiganColorsStata.svg, name("michigan") width(2000) replace

```

![Colors in Michigan Graph Scheme](MichiganColorsStata.svg){width=100%}

Stata provides the use of graph schemes that improve the overall look of graphs.

See `help scheme`.

The *Michigan graph scheme* makes use of official University of Michigan colors.

# Installation

Type `net from https://agrogan1.github.io/Stata` and click the links to install.

# Example Data

We are going to use the famous "iris" data collected by Edgar Anderson.

```{stata, collectcode=TRUE}
#| message: false

clear all
	
use "iris.dta", clear

dtable Sepal_Length Sepal_Width Petal_Length Petal_Width i.Species

```

# Histogram

```{stata, collectcode=TRUE}
#| output: false

histogram Petal_Length, scheme(michigan)

```

```{stata}
#| echo: false
#| output: false

quietly graph export myhistogram.png, width(1500) replace

```
	
![Histogram Using Michigan Scheme](myhistogram.png){width=50%}

# Histogram With Transparency

```{stata, collectcode=TRUE}
#| output: false

histogram Petal_Length, fcolor(%50) scheme(michigan)

```

```{stata}
#| echo: false
#| output: false

quietly graph export myhistogram2.png, width(1500) replace

```
	
![Histogram Using Michigan Scheme And Slightly Transparent Bars](myhistogram2.png){width=50%}


# Bar Graph

```{stata, collectcode=TRUE}
#| output: false

graph bar Petal_Length, over(Species) scheme(michigan) asyvars

```

```{stata}	
#| echo: false
#| output: false

quietly graph export mybargraph.png, width(1500) replace

```
	
![Bar Graph Using Michigan Scheme](mybargraph.png){width=50%}

# Bar Graph With Transparency

```{stata, collectcode=TRUE}
#| output: false

graph bar Petal_Length, over(Species) intensity(70) scheme(michigan) asyvars

```

```{stata}
#| echo: false
#| output: false

quietly graph export mybargraph2.png, width(1500) replace

```
	
![Bar Graph Using Michigan Scheme and Slightly Transparent Bars](mybargraph2.png){width=50%}


# Scatterplot

```{stata, collectcode=TRUE}
#| output: false

twoway (scatter Petal_Length Petal_Width) ///
(lfit Petal_Length Petal_Width), ///
scheme(michigan)

```

```{stata}
#| echo: false
#| output: false

quietly graph export myscatter.png, width(1500) replace

```
	
![Scatterplot Using Michigan Scheme](myscatter.png){width=50%}

# Scatterplot With Transparency

```{stata, collectcode = TRUE}
#| output: false

twoway (scatter Petal_Length Petal_Width, mcolor(%30)) /// markers have 30% transparency
(lfit Petal_Length Petal_Width), ///
scheme(michigan)

```

```{stata}
#| echo: false
#| output: false

quietly graph export myscatter2.png, width(1500) replace

```
	
![Scatterplot Using Michigan Scheme And Slightly Transparent Markers](myscatter2.png){width=50%}

# Legend Placement

Sometimes you may wish to have the legend of the graph placed at the *bottom* of the graph. The `pos(6)` suboption inside the `legend` option will place the legend at the bottom, while you can manually control the number of legend rows with the `rows` suboption.

```{stata, collectcode=TRUE}
#| output: false

graph bar Petal_Length, over(Species) scheme(michigan) asyvars legend(pos(6) rows(1))

```

```{stata}
#| echo: false
#| output: false

quietly graph export mybargraph3.png, width(1500) replace

```
	
![Bar Graph Using Michigan Scheme and Modified Legend](mybargraph3.png){width=50%}

# Individual Michigan Colors

Individual University of Michigan colors are listed below. 

-------------------------------------------------------------
Color                                           Hex        RGB
----------------------------------------------  ---------- ----------
[Blue]{fg="white" bg="#00274C"}                 #00274C    0 39 76

[Maize]{bg="#FFCB05"}                           #FFCB05    255 203 5

[Tappan Red]{fg="white" bg="#9A3324"}           #9A3324    154 51 36

[Ross School Orange]{bg="#D86018"}              #D86018    216 96 24

[Rackham Green]{bg="#75988d"}                   #75988d    117 152 141 

[Wave Field Green]{bg="#A5A508"}                #A5A508    165 165 8

[Taubman Teal]{bg="#00B2A9"}                    #00B2A9    0 178 169

[Arboretum Blue]{fg="white" bg="#2F65A7"}       #2F65A7    47 101 167

[Ann Arbor Amethyst]{fg="white" bg="#702082"}   #702082    112 32 130

[Matthaei Violet]{fg="white" bg="#575294"}      #575294    87 82 148

[UMMA Tan]{bg="#CFC096"}                        #CFC096    207 192 150

[Burton Tower Beige]{bg="#9B9A6D"}              #9B9A6D    155 154 109

[Angell Hall Ash]{bg="#989C97"}                 #989C97    152 156 151

[Law Quad Stone]{fg="white" bg="#655A52"}       #655A52    101 90 82
-------------------------------------------------------------

Stata can use RGB codes for colors. As an example.

```{stata, collectcode=TRUE}
#| output: false

twoway (scatter Petal_Length Petal_Width, mcolor("112 32 130 %30")) /// markers are Amethyst with 30% transparency
(lfit Petal_Length Petal_Width, lcolor("87 82 148")), /// Violet line
scheme(michigan)
```

```{stata}
#| echo: false
#| output: false

quietly graph export myscatter3.png, width(1500) replace

```

![Scatterplot Using Michigan Scheme, Selected Colors, And Slightly Transparent Markers](myscatter3.png){width=50%}




